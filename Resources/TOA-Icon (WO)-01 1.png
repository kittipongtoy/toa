import BaseSchema from './schema';
import type { MixedLocale } from './locale';
import type { AnyObject, Maybe, Optionals } from './types';
import type { Defined } from './util/types';
export declare function create(): BooleanSchema<boolean | undefined, AnyObject, boolean | undefined>;
export declare namespace create {
    var prototype: BooleanSchema<any, any, any>;
}
export default class BooleanSchema<TType extends Maybe<boolean> = boolean | undefined, TContext extends AnyObject = AnyObject, TOut extends TType = TType> extends BaseSchema<TType, TContext, TOut> {
    constructor();
    protected _typeCheck(v: any): v is NonNullable<TType>;
    i